#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

if ARCH_DPULP

menu "Smart Core DPULP-LP board options"

config DPULP_BOOT
	bool

config DPULP_FIRM
	bool

config DPULP_LOAD_ZSBL
	bool

config DPULP_LOAD_FSBL
	bool
	select DPULP_DDR

config DPULP_LOAD_BBL
	bool

choice
	prompt "Program type"

config DPULP_BOOT_ROM
	bool "0-stage boot ROM bootloader (ZSBL)"
	select DPULP_BOOT
	select DPULP_LOAD_ZSBL
	select XIP
	select LOAD_DATA
	select SYS_ENTR_M
	select SYS_EXIT_M
	select DPULP_SPI_FLASH
	select DPULP_SSI_FLASH

config DPULP_BOOT_RAM
	bool "RAM based test bench"
	select ARCH_HAS_BOOT_LOAD
	select XIP
	select BFM
	select SYS_ENTR_M
	select SYS_EXIT_M
	select SYS_EXIT_S if DPULP_CVA6
	select SYS_EXIT_U

config DPULP_BOOT_SPI_FLASH
	bool "0-stage/1-stage SPINOR bootloader (ZSBL/FSBL)"
	select ARCH_HAS_BOOT_LOAD
	select DPULP_BOOT
	select DPULP_LOAD_ZSBL
	select DPULP_LOAD_FSBL
	select XIP
	select LOAD_DATA
	select SYS_ENTR_M
	select SYS_EXIT_M
	select DPULP_SPI_FLASH
	select DPULP_SSI_FLASH

config DPULP_BOOT_SSI_FLASH
	bool "1-stage SSI flash bootloader (FSBL)"
	select ARCH_HAS_BOOT_LOAD
	select DPULP_BOOT
	select DPULP_LOAD_FSBL
	select XIP
	select SYS_ENTR_M
	select SYS_EXIT_M
	select DPULP_SPI_FLASH
	select DPULP_SSI_FLASH

config DPULP_BOOT_DDR
	bool "Berkeley bootloader (BBL)"
	select ARCH_HAS_BOOT_LOAD
	select DPULP_BOOT
	select DPULP_LOAD_BBL
	select SYS_ENTR_M
	select SYS_EXIT_M
	select SBI
	select SBI_PAYLOAD
	select DPULP_SPI_FLASH
	select DPULP_SSI_FLASH

config DPULP_FIRM_DDR
	bool "Runtime target firmware (DPULP-FW)"
	select ARCH_HAS_BOOT_LOAD
	select DPULP_FIRM
	select XIP
	select BFM
	select SYS_ENTR_M
	select SYS_EXIT_M
	select SYS_EXIT_S if DPULP_CVA6
	select SYS_EXIT_U

endchoice

menu "Bootloader/Firmware options"

config DPULP_LOAD
	bool "Enable bootloader"
	depends DPULP_LOAD_ZSBL || DPULP_LOAD_FSBL

if DPULP_LOAD

config DPULP_LOAD_SPI_FLASH
	bool "Enable load from SPI flash"
	depends DPULP_SPI_FLASH

config DPULP_BOOT_ADDR
	hex "Bootloader SPI flash jump address"
	range 0x00000000 0x01E00000
	depends DPULP_LOAD_SPI_FLASH
	default 0x00000080

choice
	prompt "Storage to load from"
	default DPULP_LOAD_SSI_FLASH

config DPULP_LOAD_SSI_FLASH
	bool "SSI flash"
	depends DPULP_SSI_FLASH

config DPULP_LOAD_ROM
	bool "ROM"

config DPULP_LOAD_FAKE_PCIE_MEM
	bool "fake PCIe memory"

endchoice	

config DPULP_BOOT_STACK
	bool "Enable boot from stack"
	help
	  By default, each bootloader's .text section should be in
	  a different memory region. Enable this option only if the next
	  bootloader resides on SRAM low end, and the region is conflict
	  with the current bootloader. However, if the next bootloader
	  occupies the high end of the SRAM region, which is conflict with
	  the stack of the current bootloader, please do not enable this
	  option.
	  If unsure, say 'N'.

config DPULP_BOOT_DEBUG
	bool "Enable boot safe debugging messages"

endif

config DPULP_FIRM_SIZE
	hex "Firmware size"
	depends DPULP_FIRM

endmenu

menu "Simulation options"

if SIMULATION

config DPULP_SIM_CLK
	bool "Allow disabling clock framework"
	help
	  On simulation environments, CLK can be opt-off if no need to
	  configure any clocks (forced in test benches).

endif

endmenu

menuconfig DPULP_TCSR
	bool "Top control and status registers (TCSR) support"
	select STRING_STRTOULL if COMMAND

if DPULP_TCSR

endif

menuconfig DPULP_GPIO
	bool "DPULP GPIO controller support"
	select DW_GPIO

if DPULP_GPIO

endif

menuconfig DPULP_TMR
	bool "DPULP RISC-V timer support"
	select ARCH_HAS_SBI_TIMER

if DPULP_TMR

config DPULP_TMR_CMP_CONST
	bool "Enable constant compare counter support"
	depends SIMULATION
	help
	  Can fixup a shortened timeout value to make RTL simulation
	  faster.

config DPULP_TMR_CMP_CONST_TOUT
	hex "Constant compare counter value"
	depends DPULP_TMR_CMP_CONST
	range 0x1000 0x10000
	default 0x4000
	help
	  Use the fixed value to be added to the CNT, and set to the
	  CMP register.

endif

menuconfig DPULP_UART
	bool "DPULP UART controller support"
	select DW_UART
	select ARCH_HAS_NS16550_FIFO_16
	select ARCH_HAS_DW_UART_FIFO_MEM_INTERNAL

if DPULP_UART

config DPULP_UART_VIP
	bool "Enable DPULP UART simulation model support"
	depends SIMULATION
	default y
	help
	  When this is selected, the UART baudrate generator frequency will
	  be APB_CLK/16, making things happening quicker when an UART slave
	  VIP is connected. In case your are using a UART master DPI VIP,
	  selecting this is safe as the VIP cares no about the baudrate.
	  If unsure, say 'Y'.

endif

menuconfig DPULP_SPI_FLASH
	bool "DPULP SPI flash support"
	select MATH_DIV32
	help
	  The DPULP SoC contains a random accessible SPI controller that is
	  able to convert generic SPI NOR flashes into random accessible
	  ROM.

if DPULP_SPI_FLASH

choice
	prompt "Divider length"
	default DPULP_FLASH_DIVIDER_16

config DPULP_FLASH_DIVIDER_8
	bool "8-bit"

config DPULP_FLASH_DIVIDER_16
	bool "16-bit"

config DPULP_FLASH_DIVIDER_24
	bool "24-bit"

config DPULP_FLASH_DIVIDER_32
	bool "32-bit"

endchoice

choice
	prompt "SPI select length"
	default DPULP_FLASH_SS_8

config DPULP_FLASH_SS_8
	bool "8-bit"

config DPULP_FLASH_SS_16
	bool "16-bit"

config DPULP_FLASH_SS_24
	bool "24-bit"

config DPULP_FLASH_SS_32
	bool "32-bit"

endchoice

endif

menuconfig DPULP_SSI_FLASH
	bool "DPULP SSI flash support"
	depends SPI_MASTER
	select DW_SSI
	select UEFI
	select UEFI_GPT
	select ARCH_HAS_SSI_FIFO
	select ARCH_HAS_SSI_XFER_32
	select ARCH_HAS_SSI_FRF
	select ARCH_HAS_SSI_SPI
	select ARCH_HAS_SSI_SPI_1WIRE
	select ARCH_HAS_SPIFLASH
	select SPIFLASH_W25Q32
	select STRING_UUID
	help
	  The DPULP SoC also contains a DW_SSI controller that can be used
	  to interface with the external SSI flashes. However, the
	  controller doesn't support random accessibility.

if DPULP_SSI_FLASH

config DPULP_SSI_FLASH_FREQ
	int "DPULP SSI flash frequency"
	range 100000 80000000
	default 50000000
	help
	  The SPINOR flash uses the "EEPROM read" protocol that the CS
	  should be kept active during the entire transaction. However,
	  the DW_ssi controller automatically inactivates the CS pin when
	  the FIFO is run out. That requires the program to run fast
	  enough to fill data into the SPI FIFO. The CS inactivation can
	  be seen if the SPI transaction period is filled up with less APB
	  transactions (rom/ram/ssi accesses).
	  It's tested that 8MHz is working for the case of "ROM booting
	  SSI" in the simulation environment, for the non-simulation
	  environment, it's preferred to use 1MHz by design.

endif

config DPULP_DDR
	bool

config DPULP_RIO
	bool "DPULP RapidIO interconnect support"
	select MOBIVEIL_GRIO
	select ARCH_IS_GRIO_SERIAL

endmenu

endif
